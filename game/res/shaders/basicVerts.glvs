#version 120

uniform vec3 normal;
uniform mat4 normRot;
varying vec2 texcoords;
varying vec3 norm;
varying vec3 lightDir;
varying mat3 tanmat;
varying vec3 tlightdir;
varying vec3 worldPos;

void main() {
  gl_Position=gl_ModelViewProjectionMatrix*gl_Vertex;
  
  lightDir = normalize(vec3(-1.0, -1.0, 0.25));
  norm=normalize((normRot*vec4(gl_Normal, 1.0)).xyz);
  texcoords=gl_MultiTexCoord0.xy;
  
  vec3 tangent;
  vec3 v1 = cross(norm, vec3(0.0, 0.0, -1.0));
  vec3 v2 = cross(norm, vec3(0.0, 0.0, -1.0));
  if(length(v1) > length(v2)) {
    tangent=v1;
  } else {
    tangent=v2;
  }  
  vec3 bitan = cross(norm, tangent);  
  tanmat = mat3(tangent.x, bitan.x, norm.x, tangent.y, bitan.y, norm.y, tangent.z, bitan.z, norm.z);  
  tlightdir=tanmat*(-lightDir);
  
  worldPos = (gl_ModelViewMatrix*gl_Vertex).xyz;
}
